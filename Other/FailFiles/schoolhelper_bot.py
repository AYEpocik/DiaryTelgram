import sqlite3 # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö SQLite
from aiogram import Bot, Dispatcher, executor, types # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–ª–µ–≥—Ä–∞–º API
from apscheduler.schedulers.asyncio import AsyncIOScheduler # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á
import datetime # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏
import string # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
import calc # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º handler –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
from config_reader import config # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = config.bot_token.get_secret_value()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
DB_PATH = "../Database/school.db"

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=TOKEN)
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(bot)
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = AsyncIOScheduler()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2) # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º
keyboard.add("–ß—Ç–æ –≤ —Å—Ç–æ–ª–æ–≤–æ–π?üç≤", "–ü–µ—Ä–µ–≤–æ–¥ –±–∞–ª–ª–æ–≤ –ï–ì–≠üíØ", "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—ÇüòÇ", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start_message(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–µ—â–∞–º–∏. –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.", reply_markup=keyboard)
    # –ü–æ–ª—É—á–∞–µ–º ID –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_id = message.from_user.id
    username = message.from_user.username
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–æ–º –∂–µ –ø–æ—Ç–æ–∫–µ
    conn = sqlite3.connect(DB_PATH)
    # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–æ–º –∂–µ –ø–æ—Ç–æ–∫–µ
    cur = conn.cursor()
    # –î–æ–±–∞–≤–ª—è–µ–º ID –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É users
    cur.execute("INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)", (user_id, username))
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.commit()
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∫—É—Ä—Å–æ—Ä
    cur.close()
    conn.close()

@dp.message_handler(lambda message: message.text == "–ß—Ç–æ –≤ —Å—Ç–æ–ª–æ–≤–æ–π?üç≤")
async def start(message: types.Message):
	# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏: –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥ –∏ –ö–æ–º–∞–Ω–¥—ã
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
	keyboard.add("–ó–∞–≤—Ç—Ä–∞–∫", "–û–±–µ–¥", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –ø–∏—Ç–∞–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
	await message.answer("–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∑–∞–≤—Ç—Ä–∞–∫ –∏–ª–∏ –æ–±–µ–¥?", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def commands(message: types.Message):
	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞
	await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞.", reply_markup=keyboard)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º "–ó–∞–≤—Ç—Ä–∞–∫" –∏–ª–∏ "–û–±–µ–¥"
@dp.message_handler(lambda message: message.text in ["–ó–∞–≤—Ç—Ä–∞–∫", "–û–±–µ–¥"])
async def menu(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    date = datetime.date.today()
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Monday)
    real_weekday = date.strftime("%A")
    # –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –¥–µ–Ω—å –∫ –¥–∞—Ç–µ –∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    if real_weekday == "Sunday":
        date += datetime.timedelta(days=1)
        weekday = date.strftime("%A")
    else: weekday = real_weekday
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏ –∏ —Ç–∏–ø—É –ø–∏—Ç–∞–Ω–∏—è
    # –ö–æ–Ω–∫–∞—Ç–µ–Ω–∏—Ä—É–µ–º –¥–≤–∞ –±–ª—é–¥–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º /
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ç–∏–ø–æ–≤ –ø–∏—Ç–∞–Ω–∏—è
    if message.text == "–ó–∞–≤—Ç—Ä–∞–∫":
        food_type = "breakfast"
    else:
        food_type = "lunch"
    query = f"SELECT {food_type}1 || ', –∏–ª–∏ ' || {food_type}2 FROM menu WHERE weekday = '{weekday}'"
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    cursor.execute(query)
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≥—Ä–µ—á–∫–∞/–º–∞–∫–∞—Ä–æ–Ω—ã")
    menu = cursor.fetchone()[0]
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn.close()
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_message = message.text
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ –∏ –º–µ–Ω—é
    # –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, —Ç–æ –ø–∏—à–µ–º "–ó–∞–≤—Ç—Ä–∞ –Ω–∞...", –∏–Ω–∞—á–µ –ø–∏—à–µ–º "–°–µ–≥–æ–¥–Ω—è –Ω–∞..."
    if real_weekday == "Sunday":
        bot_message = f"–ó–∞–≤—Ç—Ä–∞ –Ω–∞ {user_message.lower()} –≤ —Å—Ç–æ–ª–æ–≤–æ–π {menu}"
    elif (real_weekday == "Saturday") and (message.text == "–û–±–µ–¥"):
        bot_message = "–°–µ–≥–æ–¥–Ω—è –æ–±–µ–¥–æ–≤ –Ω–µ—Ç"
    else:
        bot_message = f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ {user_message.lower()} –≤ —Å—Ç–æ–ª–æ–≤–æ–π {menu}"
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(bot_message)



#@dp.message_handler(lambda message: message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÖ")

async def create_week_schedule(surname, DB_PATH=DB_PATH):
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(DB_PATH)
    # –ó–∞–¥–∞–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    output_path = f'../Schedules/{surname}.jpg'
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    schedule = pd.DataFrame()
    # –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    days = {"monday": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            "tuesday": "–í—Ç–æ—Ä–Ω–∏–∫",
            "wednesday": "–°—Ä–µ–¥–∞",
            "thursday": "–ß–µ—Ç–≤–µ—Ä–≥",
            "friday": "–ü—è—Ç–Ω–∏—Ü–∞"}
    # –¶–∏–∫–ª –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
    for day in days:
        # –ó–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–∫–æ–≤ —É—á–µ–Ω–∏–∫–∞ –ø–æ —Ñ–∞–º–∏–ª–∏–∏
        query = f"SELECT * FROM {day} WHERE surname = '{surname}'"
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞
        df = pd.read_sql_query(query, conn)
        # –£–¥–∞–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å –∏–Ω–¥–µ–∫—Å–æ–º –∏ —Ñ–∞–º–∏–ª–∏–µ–π
        df.drop(["index", "surname"], axis=1, inplace=True)
        # –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º, —á—Ç–æ–±—ã —Å—Ç—Ä–æ–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –Ω–æ–º–µ—Ä–∞–º —É—Ä–æ–∫–æ–≤
        df = df.T
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–æ–ª–±–µ—Ü —Å —É—Ä–æ–∫–∞–º–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
        df.rename(columns={0: days[day]}, inplace=True)
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –∫ –æ–±—â–µ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ fill_value
        schedule = pd.concat([schedule, df], axis=1)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ jpg-—Ñ–∞–π–ª
    plt.figure(figsize=(13, 2), dpi=1000)
    plt.table(cellText=schedule.values, colLabels=schedule.columns, cellLoc="left", loc='upper left')
    plt.axis("off")
    plt.savefig(output_path, dpi=1000)
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn.close()
    return output_path

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async def send_message_to_all():
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–æ–º –∂–µ –ø–æ—Ç–æ–∫–µ
    conn = sqlite3.connect(DB_PATH)
    # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–æ–º –∂–µ –ø–æ—Ç–æ–∫–µ
    cur = conn.cursor()
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    cur.execute("SELECT user_id FROM users")
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_ids = cur.fetchall()
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∫—É—Ä—Å–æ—Ä
    cur.close()
    conn.close()
    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user_id in user_ids:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ bot.send_message
        await bot.send_message(user_id[0], "–ü—Ä–∏–≤–µ—Ç! –°–¥–µ–ª–∞–ª –ª–∏ —Ç—ã —É—Ä–æ–∫–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞?")

def main():
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é send_message_to_all –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ scheduler.add_job()
    scheduler.add_job(send_message_to_all, "cron", hour=18, minute=50)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ executor.start_polling()
    executor.start_polling(dp, skip_updates=True)

if __name__ == '__main__':
    main()
